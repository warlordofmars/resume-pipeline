apply plugin: 'jp.classmethod.aws.cloudformation'
    
cloudFormation {
    stackName "${rootProject.ext.stackName}"
    templateFile file(cloudformationSource)
    templateBucket cloudformationBucket
    templateKeyPrefix stackName
    stackParams ([
        'DomainName': domainName,
        'FullDomainName': websiteUrl,
        'AcmCertificateArn': wildcardCertARN
    ])
}

task('checkPrerequisites') {
    doLast {
        def prerequisites = [
            'cfn-lint': 'Install via \'pip install cfn-lint\'',
            'cfn_nag_scan': 'Install via \'gem install cfn-nag\'',
        ]
        prerequisites.each { prerequisite, installNotes ->
            def checkPrereq = exec {
                commandLine 'which', prerequisite
                ignoreExitValue true
                standardOutput new ByteArrayOutputStream()
            }
            if (checkPrereq.getExitValue() != 0) {
                throw new GradleException("It appears that prerequisite '${prerequisite}' is not installed.\n\n${installNotes}\n")
            }

        }
    }
}

task('deploy') {
    dependsOn awsCfnMigrateStackAndWaitCompleted
}

task('delete') {
    dependsOn awsCfnDeleteStackAndWaitCompleted
}

awsCfnMigrateStack.dependsOn awsCfnUploadTemplate

task('cfnLint') {
    dependsOn checkPrerequisites
    doFirst {
        exec {
            commandLine 'cfn-lint', cloudformationSource
        }
    }
}

task('cfnNag') {
    dependsOn checkPrerequisites
    doFirst {
        exec {
            commandLine 'cfn_nag_scan', '--input-path', cloudformationSource
        }
    }
}

task('build') {
    dependsOn cfnLint, cfnNag
}