buildscript {
    dependencies {
        classpath 'com.github.warlordofmars:gradle-release-helper:release-0.1.3'
        classpath 'com.github.warlordofmars:gradle-slack-liveupdate:release-0.3.8'
        classpath 'com.github.warlordofmars:gradle-cloudformation-helper:release-0.1.6'
        classpath 'com.github.warlordofmars:gradle-json-resume:release-0.1.9'
    }
}


apply plugin: 'com.github.warlordofmars.gradle.release'
apply plugin: 'com.github.warlordofmars.gradle.slack'


slack {
    channel 'jenkins'
    token getProperty('slack.token')
    enabled git.branch.current.name == 'master'
}

ext {

    isPromote = System.env.containsKey('PROMOTE')

    cloudformationBucket = 'warlordofmars-cloudformation'
    domainName = 'warlordofmars.net'
    wildcardCertARN = "arn:aws:acm:us-east-1:247631471946:certificate/471106fc-e3dd-4e0b-a20f-010a6e326283"
    ensureStrings = ['John A. Carter', 'johncarter@warlordofmars.net', '(617) 334-5110']
    stackName = isPromote ? 'ResumeWebsite' : 'ResumeWebsiteTest'
    cloudformationSource = 'website.yaml'
    
    resumeSource = 'resume.json'
    themes = [
        // html: 'theme/node_modules/jsonresume-theme-class/',
        html: 'theme/node_modules/jsonresume-theme-short/',
        pdf: 'theme/node_modules/jsonresume-theme-short/',
    ]
    spellCheckIgnoreList = 'spell_check_ignore.txt'
    resumeFormats = ['html', 'pdf', 'yml', 'md']
    numberOfCopies = isPromote ? 10 : 1

    websiteUrl = isPromote ? 'resume.warlordofmars.net' : 'resume-test.warlordofmars.net'
    websitePrefix = isPromote ? '' : "/${version}"

}

task('dockerBuild') {
    doLast {
        exec {
            commandLine 'docker', 'build', '-t', 'resume-builder', '.'
        }
    }
}

task('containedBuild') {
    dependsOn dockerBuild
    doLast {
        exec {
            commandLine 'docker', 'run', '-v', "${System.env['HOME']}/.m2:/home/gradle/.m2", '-v', "${System.env['HOME']}/.aws:/home/gradle/.aws", '-v', "${System.env['HOME']}/.gradle:/home/gradle/.gradle", '-v', "${projectDir}:/home/gradle/src", 'resume-builder', 'sh', '-c', './gradlew build'
        }
    }
}

task('containedDeploy') {
    mustRunAfter containedBuild
    doLast {
        exec {
            commandLine 'docker', 'run', '-v', "${System.env['HOME']}/.m2:/home/gradle/.m2", '-v', "${System.env.HOME}/Library/Mobile Documents/com~apple~CloudDocs:/home/gradle/Library/Mobile Documents/com~apple~CloudDocs", '-v', "${System.env['HOME']}/.gdrive:/home/gradle/.gdrive", '-v', "${System.env['HOME']}/.aws:/home/gradle/.aws", '-v', "${System.env['HOME']}/.gradle:/home/gradle/.gradle", '-v', "${projectDir}:/home/gradle/src", 'resume-builder', 'sh', '-c', './gradlew deploy'
        }
    }
}
